3/26 - 원카드 프로젝트 완성
1. 원카드게임을 한다고 생각하고 그에 맞추어 코드 작성
2. scanner를 통해 도스창으로 게임 진행
3. 나름대로 class별 method를 어떻게 생성해야될지 생각하면서 작성

잘한점
1. 끝까지 코드를 완성시킴
2. 규칙 순서대로 차근차근 코드를 작성

개선할 점
1. 나름의 규칙을 가지고 코드를 작성했으나 아직까지도 코드를 한꺼번에 짜는 경향이 있다
-> 현재 이를 생가하지 못하고 한번에 1,2,3,4 카드제출부터 특수카드 기능수행까지 한번에 시도 -TDD 수행할 생각조차 못함
1. 개선방향
   1) j,q,k 와 같이 특수카드는 제외하고 카드를 제출하는 코드를 작성 - TDD 수행
   2) j,q,k 각각의 특수기능을 따로 method를 만들어 TDD 수행 후 toy project에 합하는 과정
   3) 다른 과정도 이와 같은 방향으로 유도

2. method를 어떻게 더 맞는 class에 분류를 해야할지 갈피를 못잡음
-> 코드가 서로 독립적이여야 나중에 유지보수가 쉬운데 얽혀있는 느낌을 받는 중
2. 개선방향
   1) 코드를 독립적으로 분리 필요 - 1.개선방향과 같이 method별로 독립적으로 코드 작성 및 TDD 수행 후 합하는 과정을 거치면 개선할 가능성이 보일 거 같다.
   2) 각 class의 iv, method, 생성자를 그림으로 그려서 파악해보기

3. Q와 같이 player 순서가 역순으로 돌리는 것을 Array로 작성
-> 5명 이상의 Player가 들어오면 규칙이 무너진다.
3. 개선방향
    1) LinkedList의 구현을 통해서 해결

4. 추가 기능 넣기
-> 코드를 한번에 작성하다보니 방어카드, 공격카드를 공격카드로 턴 넘기기와 같은 작업을 손대지 못하였다.
4. 개선방향
    1) 1~3 과정을 마친 후 method 넣는 과정 수행

5. 코드 수정을 하면서 항상 어떤식으로 코드를 시작할 때부터 설계해야하는지 기록하기


3/27 - 원카드 player 순서 - linkedList 구현 및 TDD 진행
1. 해결방안
   1) 개별 메서드라 생각하고 구현
   2) TDD 수행하여 오류 검증
   3) hardCoding 에 적용은 하지 않음 -> 개선 방향 1,2번을 고려해서 다시 oneCardcode 작성 후 주입해보기



3월 29일
class 별 method, field 그림 그리기
너무 기능이 복잡해서 method 분리조차 힘든 상태
기능이 아예 없는 상태로 생각해서 OneCard, OneCardDeck class 생성 - TDD 수행
OneCard: 무늬, 숫자, 조커
OneCardDeck: LinkedList로 덱 생성 기능만 수행
TDD: card 개수 확인, card 각각 올바른 무늬와 숫자 포함하는지 확인


class Player 생성
final player[] 번호 지정 : 원카드는 최대 7명이기 때문
playerDeck : linkedList로 생성

toString : terminal에서 card 내고난 후 자기 턴일 때 카드를 보여줘야하므로 toString을 overriding 함 -> TDD로 확인


class OpenDeck 생성
1. openDeckList linkedList collection 생성
2. OneCard oneCard; 값이 null인 참조변수 생성
   -> 처음 OpenDeck 객체 생성시 LinkedList가 비어있게 된다.
   -> 그래서 openCard의 목적이 최근 카드를 보여주는 것이여도 당장에는 비워줘야한다.
   -> 나중에 openDeckList에 값이 들어오게되면 getOpenCard()를 통해서 값을 받도록 한다.
3. OneCard getOpenCard(){} : openDeckList의 마지막 객체 추출

2.과정에 유의해서 TDD 수행
  1) OpenDeck 생성
  2) new OneCard()를 openDeckList에 넣어줌
  3) getOopenCard()와 toString() check


3월 30일
class Dealer 생성
0. oneCardDeck 생성
    OneCardDeck은 deck으로써의 의미 밖에 없어서 Dealer말고는 사용하는 class가 없어서 게임 시작때 딜러만 호출하면 바로 사용 가능하도록
    dealer 내부에 oneCardDeck 생성
1. shuffle()
    원카드덱 섞기 - tdd 수행
2. giveCard()
    player에게 카드주기
3. resetCard()
    원카드 덱 카드 부족시 openDeck 한장 남기고 카드 주기

* 2,3 번 같은 경우 subList를 통해서 카드를 주도록 구성했다.
    subList는 subList하는 collection의 요소를 삭제하지는 않기 때문에 removeAll()을 이용해야한다.
    이때 subList의 list와 removeAll() 대상이 동일 collection으로 부터 왔기 때문에 ConcurrentModificationException 발생한다.
    컬렉션을 수정하면서 동시에 해당 컬렉션을 탐색하는 경우 발생하는 에러
    해결 : subList의 복사본을 만들어서 복사본에서 removeAll() 수행

class CardGame 과 myLinkedList를 생성
향후 플래이어 순서를 잘 다루기 위함
